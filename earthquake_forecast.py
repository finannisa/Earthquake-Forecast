# -*- coding: utf-8 -*-
"""Anforcom Final 2020

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17DOzrGyHWgF8j2lLsozGtfXeiFGTo3OK
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

train_data = pd.read_csv('train.csv')
test_data = pd.read_csv('test-2.csv')

test_data.isnull().value_counts()

train_data.head()

test_data.head()

train_data.info()
test_data.info()

label = {
    'phase' : {
        'Before P Arrival' : 0,
        'P Arrival' : 1,
        'P Wave' : 2,
        'S Arrival' : 3,
        'S Wave' : 4,
        'Coda End' : 5,
        'After Coda End' : 6,
    }
}
train_data.replace(label, inplace=True)
train_data['phase'].value_counts()

#TRAIN DUMMY VARIABLE

Station = train_data[['station']]
Station = pd.get_dummies(Station, drop_first=True)
Station.head()

Network = train_data[['network']]
Network = pd.get_dummies(Network, drop_first=True)
Network.head()

final_train = pd.concat([train_data, Station, Network], axis=1)
final_train.drop(['station', 'network'], axis=1, inplace=True)
final_train.info()

#TEST DUMMY VARIABLE

station = test_data[['station']]
station = pd.get_dummies(station, drop_first=True)
station.head()

network = test_data[['network']]
network = pd.get_dummies(network, drop_first=True)
network.head()

final_test = pd.concat([test_data, station, network], axis=1)
final_test.drop(['station', 'network'], axis=1, inplace=True)

final_test.info()

#MODELLING

X_train = final_train.drop(['id', 'phase'], axis=1)
y_train = final_train['phase']
X_test = final_test.drop(['id'], axis=1)

X_train.info()
X_test.info()

#RANDOM FOREST CLASSIFIER

from sklearn.ensemble import RandomForestClassifier

rfc = RandomForestClassifier(max_features='sqrt', n_estimators=500, max_depth=32, min_samples_split=2, min_samples_leaf=1)
rfc.fit(X_train, y_train)
pred = rfc.predict(X_test)

print("Accuracy on Traning set: ",rfc.score(X_train,y_train))
hasil_rfc = pd.DataFrame({
    'id' : final_test['id'],
    'phase' : pred
})

print(hasil_rfc.shape)

rfc = RandomForestClassifier(max_features='sqrt', n_estimators=500, max_depth=15, min_samples_split=2, min_samples_leaf=1)
rfc.fit(X_train, y_train)
pred = rfc.predict(X_test)

print("Accuracy on Traning set: ",rfc.score(X_train,y_train))
hasil_rfc = pd.DataFrame({
    'id' : final_test['id'],
    'phase' : pred
})

print(hasil_rfc.shape)

hasil_rfc['phase'].value_counts()

hasil_rfc.to_csv('submission4.csv', index=False)